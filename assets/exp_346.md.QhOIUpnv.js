import{_ as s,c as i,o as a,U as n}from"./chunks/framework.Pf98aJyB.js";const c=JSON.parse('{"title":"flqin blog","description":"","frontmatter":{},"headers":[],"relativePath":"exp/346.md","filePath":"exp/346.md"}'),h={name:"exp/346.md"},l=n(`<h1 id="flqin-blog" tabindex="-1">flqin blog <a class="header-anchor" href="#flqin-blog" aria-label="Permalink to &quot;flqin blog&quot;">​</a></h1><blockquote><p>blog 从 wordpress 迁移至 hexo+next，并通过 husky+Actions 自动部署到 ftp 及 github</p></blockquote><p>因 wordpress 后台臃肿反应慢，外加上本人作为前端代码狗，基于 nodejs 的 hexo 对我非常友好。所以花了 2 天时间终于把 blog 从 wordpress 迁移至 hexo， 通过直接在 md 里面来写博客，简直爽到飞起。特此记录一下我在迁移搭建中做了哪些操作，以便后面遗忘。</p><hr><p><strong>博客效果:</strong></p><ul><li><a href="https://blog.flqin.com" target="_blank" rel="noreferrer">blog</a></li><li><a href="https://zhaoky.github.io" target="_blank" rel="noreferrer">github.io</a></li></ul><hr><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><ol><li>安装 node.js</li><li>安装 git</li><li>全局安装 Hexo-cli（生成 hexo 项目用）</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-cli</span></span></code></pre></div><h3 id="生成静态网站" tabindex="-1">生成静态网站 <a class="header-anchor" href="#生成静态网站" aria-label="Permalink to &quot;生成静态网站&quot;">​</a></h3><p>打开目标文件夹，执行命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-demo</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-demo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> //也可以用npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i，个人喜好</span></span></code></pre></div><p>通过命令 <code>hexo s</code>可本地预览</p><p>通过命令 <code>hexo g</code>可本地生成建站资源 public 包，用来部署</p><p>相关文件夹的作用及配置<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noreferrer">点此查阅</a>, 命令<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noreferrer">点此查阅</a></p><h3 id="从-wordpress-迁移" tabindex="-1">从 wordpress 迁移 <a class="header-anchor" href="#从-wordpress-迁移" aria-label="Permalink to &quot;从 wordpress 迁移&quot;">​</a></h3><p>hexo-demo 里安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-migrator-wordpress</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>同时在<code>WordPress仪表盘</code>中导出数据(“Tools” → “Export” → “WordPress”)</p><p>安装好后执行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wordpress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sourc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #source为 WordPress 导出的文件路径或网址</span></span></code></pre></div><p>转换后再自己检查修改下就可以了，因为这个转换插件我只需要用一次，然后我就把<code>hexo-migrator-wordpress</code>删掉了。</p><h3 id="hexo-优化" tabindex="-1">hexo 优化 <a class="header-anchor" href="#hexo-优化" aria-label="Permalink to &quot;hexo 优化&quot;">​</a></h3><p>项目有两个_config.yml 文件，分别是<code>项目_config.yml</code>和<code>主题_config.yml</code>。</p><h4 id="项目增强" tabindex="-1">项目增强 <a class="header-anchor" href="#项目增强" aria-label="Permalink to &quot;项目增强&quot;">​</a></h4><ul><li>添加<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noreferrer">页面 2d 萌宠</a>插件</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-helper-live2d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live2d-widget-model-koharu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p><code>项目config</code>添加配置：</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">live2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  scriptFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jsdelivr</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 默认</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pluginRootPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">live2dw/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 插件在站点上的根目录(相对路径)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pluginJsPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lib/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 脚本文件相对与插件根目录路径</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pluginModelPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">assets/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 模型文件相对与插件根目录路径</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tagMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 调试, 是否在控制台输出日志</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">live2d-widget-model-koharu</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # npm-module package name</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hHeadPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    vHeadPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.618</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    superSample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">125</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">left</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hOffset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    vOffset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  mobile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  react</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    opacityDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    opacityOnHover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span></span></code></pre></div><ul><li>添加<a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noreferrer">搜索功能</a></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-generator-search</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p><code>项目config</code> 设置：</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">search</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">search.xml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">post</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">html</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span></span></code></pre></div><p><code>主题config</code> 设置：</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">local_search</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><ul><li><a href="https://github.com/theme-next/hexo-filter-**optimize**" target="_blank" rel="noreferrer">页面加载优化</a></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-filter-optimize</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>配置见作者说明。</p><ul><li>注意插件与 next font-awesome 本地库有冲突，需要把<code>主题config</code>里的<code>fontawesome</code>替换为线上 CDN。<a href="https://github.com/theme-next/hexo-filter-optimize/issues/2" target="_blank" rel="noreferrer">详见</a></li><li>在本地 sever 的时候很慢，建议只在发布部署的时候使用。（用<code>sed -i</code>在 travis 构建里开启）</li></ul><h4 id="主题相关" tabindex="-1">主题相关 <a class="header-anchor" href="#主题相关" aria-label="Permalink to &quot;主题相关&quot;">​</a></h4><p>采用了 star 最多的 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noreferrer">hexo</a>，官方文档<a href="https://theme-next.org/docs/" target="_blank" rel="noreferrer">查阅</a>。设置方式：修改<code>项目config</code>里的 <code>theme</code> 为 <code>next</code>即可。</p><h5 id="主题优化-以下配置均在主题config" tabindex="-1">主题优化（以下配置均在<code>主题config</code>） <a class="header-anchor" href="#主题优化-以下配置均在主题config" aria-label="Permalink to &quot;主题优化（以下配置均在\`主题config\`）&quot;">​</a></h5><ul><li>生成缓存： <code>cache.enable:true</code></li><li>修改网站 favicon： <code>favicon</code></li><li>页脚修改： <code>footer</code></li><li>右上角 github banner 生成： <code>github_banner</code></li><li>设置导航： <code>menu</code></li><li>选择主题 Pisces：<code>scheme: Pisces</code></li><li>设置概览信息：<code>social social_icons</code></li><li>设置头像相关：<code>avatar</code></li><li>代码风格：<code>highlight_theme</code></li><li>设置百度统计：<code>baidu_analytics</code></li><li>设置显示加载更多：<code>scroll_to_more</code></li><li>保存滚动位置：<code>save_scroll</code></li><li>添加打赏：<code>reward_settings reward</code></li><li>拷贝<a href="https://github.com/theme-next/theme-next-reading-progress" target="_blank" rel="noreferrer">滑动进度条</a>并设置：<code>reading_progress</code></li><li>拷贝<a href="https://github.com/theme-next/theme-next-pace" target="_blank" rel="noreferrer">加载进度条</a>并设置：<code>pace pace_theme</code></li><li>拷贝<a href="https://github.com/theme-next/theme-next-canvas-nest" target="_blank" rel="noreferrer">页面 3D 背景</a>并设置<code>canvas_nest</code></li><li>拷贝<a href="https://github.com/theme-next/theme-next-fancybox3" target="_blank" rel="noreferrer">fancyBox</a>并设置<code>fancybox</code></li><li>拷贝<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noreferrer">字数统计插件</a>并设置（需同时设置两个<code>_onfig</code>,并在项目 yarn add 该插件）：<code>symbols_count_time</code></li></ul><h4 id="seo-优化" tabindex="-1">SEO 优化 <a class="header-anchor" href="#seo-优化" aria-label="Permalink to &quot;SEO 优化&quot;">​</a></h4><ul><li><p><a href="https://ziyuan.baidu.com/" target="_blank" rel="noreferrer">百度站长平台</a></p></li><li><p><a href="https://search.google.com/search-console" target="_blank" rel="noreferrer">谷歌站长平台</a></p></li><li><p>通过在搜索引擎输入:<code>site: blog.flqin.com</code>测试是否被收录</p></li><li><p>未被收录的话，在站长平台添加。</p></li><li><p>提交链接：包括<code>主动推送</code>，<code>自动推送</code>，<code>sitemap</code>,效率:<code>主动推送&gt;自动推送&gt;sitemap</code>,可同时配合使用:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-generator-sitemap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-generator-baidu-sitemap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-baidu-url-submit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>并设置<code>项目config</code>:<code>url</code>,<code>permalink</code>,<code>sitemap</code>,<code>baidusitemap</code>,<code>baidu_url_submit</code>,<code>deploy</code></p></li></ul><h3 id="husky-actions-持续部署到-ftp-和-gitlab-io" tabindex="-1">husky+Actions 持续部署到 ftp 和 gitlab.io <a class="header-anchor" href="#husky-actions-持续部署到-ftp-和-gitlab-io" aria-label="Permalink to &quot;husky+Actions 持续部署到 ftp 和 gitlab.io&quot;">​</a></h3><h4 id="部署到-ftp" tabindex="-1">部署到 ftp <a class="header-anchor" href="#部署到-ftp" aria-label="Permalink to &quot;部署到 ftp&quot;">​</a></h4><p>安装 <code>husky</code>：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>package.json 添加：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;husky&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;hooks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;pre-push&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blog&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>其中 blog 是本地 shell 命令，主要功能是将 hexo 构建后的代码传到 ftp。</p><blockquote><p>为什么不用 <code>hexo-deployer-ftpsync</code> 直接上传？因为使用 github actions 的服务器构建上传到国内会出现墙的问题。只能手动本地上传。</p></blockquote><h4 id="部署到-github-io" tabindex="-1">部署到 github.io <a class="header-anchor" href="#部署到-github-io" aria-label="Permalink to &quot;部署到 github.io&quot;">​</a></h4><p>添加部署相关插件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-deployer-git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>部署的<code>项目config</code>配置(详细配置<a href="https://hexo.io/zh-cn/docs/deployment" target="_blank" rel="noreferrer">查阅</a>)</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  repo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git@github.com:zhaoky/zhaoky.github.io.git</span></span></code></pre></div><p>ci 配置</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sma11black/hexo-action@v1.0.4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          deploy_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.DEPLOY_KEY }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          user_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">zhaoky</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          user_email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">623212389@qq.com</span></span></code></pre></div><p>其中 DEPLOY_KEY 为私钥，而公钥则部署到 zhaoky.github.io 仓库的<code>deploy key</code>。</p><h4 id="action-的配置文件" tabindex="-1">action 的配置文件 <a class="header-anchor" href="#action-的配置文件" aria-label="Permalink to &quot;action 的配置文件&quot;">​</a></h4><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Action CI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Run</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Setup nodejs</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/setup-node@v2-beta</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          node-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;12&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yarn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Set Env</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          BAIDU_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.BAIDU_TOKEN }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sed -i &quot;s/BAIDU_TOKEN/$BAIDU_TOKEN/g&quot; ./_config.yml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sma11black/hexo-action@v1.0.4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          deploy_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.DEPLOY_KEY }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          user_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">zhaoky</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          user_email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">623212389@qq.com</span></span></code></pre></div><hr><h3 id="以下为原-travis-的配置" tabindex="-1">以下为原 Travis 的配置 <a class="header-anchor" href="#以下为原-travis-的配置" aria-label="Permalink to &quot;以下为原 Travis 的配置&quot;">​</a></h3><h4 id="git-部署相关设置" tabindex="-1">git 部署相关设置 <a class="header-anchor" href="#git-部署相关设置" aria-label="Permalink to &quot;git 部署相关设置&quot;">​</a></h4><p>github 部署采用 ssh 的通讯加密方式，首先在 github 上建一个命名为 zhaoky.github.io(zhaoky 替换成 github 名)的仓库，然后本地本地生成一对公私钥（运行<code>ssh-keygen -t rsa -C youremail@example.com</code>生成）,将.pub 公钥配置在 zhaoky.github.io 仓库的 <code>deploy key</code>，把私钥和 ssh-config 发到 travis 的构建服务器里。私钥为了保证安全性，本地通过 travis 命令加密，然后在 travis 构建时再解密，这样就能自动发布了。</p><h4 id="本地-travis-命令如何加密" tabindex="-1">本地 travis 命令如何加密 <a class="header-anchor" href="#本地-travis-命令如何加密" aria-label="Permalink to &quot;本地 travis 命令如何加密&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> travis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">travis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --com</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #如果仍在使用travis-ci.org，则需要使用--org</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">travis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> encrypt-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id_rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pro</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #使用--add自动添加到travis.yml,--pro将生成的加密环境变量添加到travis项目后台管理中</span></span></code></pre></div><p>这样就生成了一个加密后的.enc 的文件了</p><h4 id="ssh-config-怎么配置" tabindex="-1">ssh/config 怎么配置 <a class="header-anchor" href="#ssh-config-怎么配置" aria-label="Permalink to &quot;ssh/config 怎么配置&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    User</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    StrictHostKeyChecking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    IdentityFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    IdentitiesOnly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span></code></pre></div><p>我的做法是在项目里建了一个.travis 的文件夹，将加密后的.enc 文件和 ssh-config 放进去，在 travis 构建的时候发到构建的机器上。</p><h4 id="我的-travis-yml-的配置" tabindex="-1">我的.travis.yml 的配置 <a class="header-anchor" href="#我的-travis-yml-的配置" aria-label="Permalink to &quot;我的.travis.yml 的配置&quot;">​</a></h4><p>直接看配置就明白了。</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">node_js</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">node_js</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;10&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  directories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">node_modules</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  only</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">before_install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">openssl aes-256-cbc -K $encrypted_43f9974e8d06_key -iv $encrypted_43f9974e8d06_iv</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    -in .travis/id_rsa.enc -out ~/.ssh/id_rsa -d</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chmod 600 ~/.ssh/id_rsa</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cp .travis/ssh_config ~/.ssh/config</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git config --global user.name &#39;korey&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git config --global user.email &#39;keyu.zhao@foxmail.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yarn add hexo-cli -g</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yarn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bash sed.sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yarn run deploy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #hexo clean &amp;&amp; hexo g -d</span></span></code></pre></div>`,77),e=[l];function t(p,k,r,d,o,g){return a(),i("div",null,e)}const y=s(h,[["render",t]]);export{c as __pageData,y as default};

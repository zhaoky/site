import{_ as e,c as a,o,U as t}from"./chunks/framework.GU250d-J.js";const b=JSON.parse('{"title":"HTML中_等6种空白空格的区别","description":"","frontmatter":{},"headers":[],"relativePath":"misc/167.md","filePath":"misc/167.md"}'),p={name:"misc/167.md"},n=t('<h1 id="html中-等6种空白空格的区别" tabindex="-1">HTML中_等6种空白空格的区别 <a class="header-anchor" href="#html中-等6种空白空格的区别" aria-label="Permalink to &quot;HTML中_等6种空白空格的区别&quot;">​</a></h1><p><code>HTML</code> 提供了 5 种空格实体（<code>space entity</code>），它们拥有不同的宽度，非断行空格（<code>&amp;nbsp;</code>）是常规空格的宽度，可运行于所有主流浏览器。其他几种空格（<code>&amp;ensp; &amp;emsp; &amp;thinsp; &amp;zwnj; &amp;zwj;</code>）在不同浏览器中宽度各异。</p><h2 id="nbsp" tabindex="-1"><code>&amp;nbsp;</code> <a class="header-anchor" href="#nbsp" aria-label="Permalink to &quot;`&amp;nbsp;`&quot;">​</a></h2><p>它叫<strong>不换行空格</strong>，全称 No-Break Space，它是最常见和我们使用最多的空格，大多数的人可能只接触了  ，它是按下 space 键产生的空格。在 HTML 中，如果你用空格键产生此空格，空格是不会累加的（只算 1 个）。要使用 html 实体表示才可累加，该空格占据宽度受字体影响明显而强烈。</p><h2 id="ensp" tabindex="-1"><code>&amp;ensp;</code> <a class="header-anchor" href="#ensp" aria-label="Permalink to &quot;`&amp;ensp;`&quot;">​</a></h2><p>它叫<strong>半角空格</strong>，全称是 En Space，en 是字体排印学的计量单位，为 em 宽度的一半。根据定义，它等同于字体度的一半（如 16px 字体中就是 8px）。名义上是小写字母 n 的宽度。此空格传承空格家族一贯的特性：透明的，此空格有个相当稳健的特性，就是其占据的宽度正好是 1/2 个中文宽度，而且基本上不受字体影响。</p><h2 id="emsp" tabindex="-1"><code>&amp;emsp;</code> <a class="header-anchor" href="#emsp" aria-label="Permalink to &quot;`&amp;emsp;`&quot;">​</a></h2><p>它叫<strong>全角空格</strong>，全称是 Em Space，em 是字体排印学的计量单位，相当于当前指定的点数。例如，1 em 在 16px 的字体中就是 16px。此空格也传承空格家族一贯的特性：透明的，此空格也有个相当稳健的特性，就是其占据的宽度正好是 1 个中文宽度，而且基本上不受字体影响。</p><h2 id="thinsp" tabindex="-1"><code>&amp;thinsp;</code> <a class="header-anchor" href="#thinsp" aria-label="Permalink to &quot;`&amp;thinsp;`&quot;">​</a></h2><p>它叫<strong>窄空格</strong>，全称是 Thin Space。我们不妨称之为“瘦弱空格”，就是该空格长得比较瘦弱，身体单薄，占据的宽度比较小。它是 em 之六分之一宽。</p><h2 id="zwnj" tabindex="-1"><code>&amp;zwnj;</code> <a class="header-anchor" href="#zwnj" aria-label="Permalink to &quot;`&amp;zwnj;`&quot;">​</a></h2><p>它叫<strong>零宽不连字</strong>，全称是 Zero Width Non Joiner，简称“ZWNJ”，是一个不打印字符，放在电子文本的两个字符之间，抑制本来会发生的连字，而是以这两个字符原本的字形来绘制。 ‌</p><h2 id="zwj" tabindex="-1"><code>&amp;zwj;</code> <a class="header-anchor" href="#zwj" aria-label="Permalink to &quot;`&amp;zwj;`&quot;">​</a></h2><p>它叫<strong>零宽连字</strong>，全称是 Zero Width Joiner，简称“ZWJ”，是一个不打印字符，放在某些需要复杂排版语言（如阿拉伯语、印地语）的两个字符之间，使得这两个本不会发生连字的字符产生了连字效果。</p><p>此外，浏览器还会把以下字符当作空白进行解析：空格（<code>&amp;#x0020;</code>）、制表位（<code>&amp;#x0009;</code>）、换行（<code>&amp;#x000A;</code>）和回车（<code>&amp;#x000D;</code>）还有（<code>&amp;#12288;</code>）等等。</p>',15),c=[n];function s(r,d,i,m,h,l){return o(),a("div",null,c)}const u=e(p,[["render",s]]);export{b as __pageData,u as default};

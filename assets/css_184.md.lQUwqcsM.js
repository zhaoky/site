import{_ as s,c as i,o as t,U as a}from"./chunks/framework.UMIDyG6S.js";const g=JSON.parse('{"title":"CSS3中:nth-child和:nth-of-type的区别深入理解（转）","description":"","frontmatter":{},"headers":[],"relativePath":"css/184.md","filePath":"css/184.md"}'),e={name:"css/184.md"},n=a(`<h1 id="css3中-nth-child和-nth-of-type的区别深入理解-转" tabindex="-1">CSS3中:nth-child和:nth-of-type的区别深入理解（转） <a class="header-anchor" href="#css3中-nth-child和-nth-of-type的区别深入理解-转" aria-label="Permalink to &quot;CSS3中:nth-child和:nth-of-type的区别深入理解（转）&quot;">​</a></h1><p><code>:nth-child</code> 可以选择父元素下的字元素，<code>:nth-of-type</code> 也可以。但是它们到底有什么区别呢？</p><p>其实区别很简单：<code>:nth-of-type</code> 为什么要叫 <code>:nth-of-type</code>？因为它是以&quot;<code>type</code>&quot;来区分的。也就是说：<code>ele:nth-of-type(n)</code>是指父元素下第 <code>n</code> 个 <code>ele</code> 元素，</p><p>而 <code>ele:nth-child(n)</code> 是指父元素下第 <code>n</code> 个元素且这个元素为 <code>ele</code>，若不是，则选择失败。</p><p>eg:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;zero&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;one&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;two&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面这个例子，<code>.demo li:nth-child(2)</code> 选择的是 <code>&lt;li&gt;one&lt;/li&gt;</code> 节点，而 <code>.demo li:nth-of-type(2)</code> 则选择的是 <code>&lt;li&gt;two&lt;/li&gt;</code> 节点。</p>`,7),h=[n];function l(p,d,k,o,E,c){return t(),i("div",null,h)}const y=s(e,[["render",l]]);export{g as __pageData,y as default};
